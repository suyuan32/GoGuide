import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o,d as n}from"./app-DLqeUa4U.js";const d={},r=n('<div class="hint-container tip"><p class="hint-container-title">Tips</p><p>As a competent programmer, mastering Git is a fundamental requirement.</p></div><h2 id="commonly-used-git-commands" tabindex="-1"><a class="header-anchor" href="#commonly-used-git-commands"><span>Commonly Used Git Commands</span></a></h2><table><thead><tr><th style="text-align:left;">Description</th><th>Command</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Clone Repository</strong></td><td><code>git clone xxxx.git</code></td></tr><tr><td style="text-align:left;"><strong>Create Branch</strong></td><td><code>git branch dev</code> <br> <code>git checkout -b dev</code> <br> <code>git switch -c dev</code></td></tr><tr><td style="text-align:left;"><strong>Switch Branch</strong></td><td><code>git checkout dev</code> <br> <code>git switch dev</code></td></tr><tr><td style="text-align:left;"><strong>View Local Branches</strong></td><td><code>git branch</code></td></tr><tr><td style="text-align:left;"><strong>View Remote Branches</strong></td><td><code>git branch -r</code></td></tr><tr><td style="text-align:left;"><strong>Delete Local Branch</strong></td><td><code>git branch -d dev</code></td></tr><tr><td style="text-align:left;"><strong>Delete Remote Branch</strong></td><td><code>git push origin --delete dev</code></td></tr><tr><td style="text-align:left;"><strong>Stage Changes</strong></td><td><code>git add .</code></td></tr><tr><td style="text-align:left;"><strong>Commit Changes</strong></td><td><code>git commit -m &quot;feat: add new feature&quot;</code></td></tr><tr><td style="text-align:left;"><strong>Push Changes</strong></td><td><code>git push origin dev</code> <br> <code>git push -f origin dev</code> (force push)</td></tr><tr><td style="text-align:left;"><strong>Pull Changes</strong></td><td><code>git pull origin dev</code></td></tr><tr><td style="text-align:left;"><strong>Merge Changes</strong></td><td><code>git merge dev</code></td></tr><tr><td style="text-align:left;"><strong>Check Status</strong></td><td><code>git status</code></td></tr><tr><td style="text-align:left;"><strong>View Commit History</strong></td><td><code>git log</code></td></tr><tr><td style="text-align:left;"><strong>View Differences</strong></td><td><code>git diff</code></td></tr><tr><td style="text-align:left;"><strong>View Remote URL</strong></td><td><code>git remote -v</code></td></tr><tr><td style="text-align:left;"><strong>Rollback Version</strong></td><td>(Roll back to specific <code>commit_id</code>) <br> <code>git reset --hard commit_id</code> <br> (Roll back to previous version) <br> <code>git reset --soft HEAD^</code> or <code>git reset --soft HEAD~1</code></td></tr><tr><td style="text-align:left;"><strong>Undo Changes</strong></td><td><code>git revert commit_id</code></td></tr><tr><td style="text-align:left;"><strong>Merge (rebase)</strong></td><td><code>git rebase dev</code></td></tr></tbody></table><h2 id="steps-for-committing-code" tabindex="-1"><a class="header-anchor" href="#steps-for-committing-code"><span>Steps for Committing Code</span></a></h2><div style="text-align:center;"><img src="https://www.plantuml.com/plantuml/svg/SoWkIImgAStDuG8pkBYiqZDB50fAStAi8Sp4b1GeApa_DpUpn1gceZZ3cWkeAR-0oo4rBmLe0W00" alt=""></div>',5),i=[r];function s(c,g){return o(),e("div",null,i)}const m=t(d,[["render",s],["__file","1-git.html.vue"]]),h=JSON.parse('{"path":"/en/guide/devtools/Git/1-git.html","title":"Git","lang":"en-US","frontmatter":{"order":1,"title":"Git","icon":"bx:bx-git-branch","head":[["meta",{"name":"keywords","content":"git, git command, git common command, git basic, submit code"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://goguide.ryansu.tech/guide/devtools/Git/1-git.html"}],["meta",{"property":"og:url","content":"https://goguide.ryansu.tech/en/guide/devtools/Git/1-git.html"}],["meta",{"property":"og:site_name","content":"Go Guide"}],["meta",{"property":"og:title","content":"Git"}],["meta",{"property":"og:description","content":"Tips As a competent programmer, mastering Git is a fundamental requirement. Commonly Used Git Commands Steps for Committing Code"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-27T13:22:38.000Z"}],["meta",{"property":"article:author","content":"Go Guide"}],["meta",{"property":"article:modified_time","content":"2024-04-27T13:22:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-27T13:22:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Go Guide\\",\\"url\\":\\"https://github.com/suyuan32\\"}]}"]],"description":"Tips As a competent programmer, mastering Git is a fundamental requirement. Commonly Used Git Commands Steps for Committing Code"},"headers":[{"level":2,"title":"Commonly Used Git Commands","slug":"commonly-used-git-commands","link":"#commonly-used-git-commands","children":[]},{"level":2,"title":"Steps for Committing Code","slug":"steps-for-committing-code","link":"#steps-for-committing-code","children":[]}],"git":{"createdTime":1714139000000,"updatedTime":1714224158000,"contributors":[{"name":"Ryan Su","email":"yuansu.china.work@gmail.com","commits":4}]},"readingTime":{"minutes":0.7,"words":210},"filePathRelative":"en/guide/devtools/Git/1-git.md","localizedDate":"April 26, 2024","autoDesc":true,"excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">Tips</p>\\n<p>As a competent programmer, mastering Git is a fundamental requirement.</p>\\n</div>\\n<h2>Commonly Used Git Commands</h2>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">Description</th>\\n<th>Command</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Clone Repository</strong></td>\\n<td><code>git clone xxxx.git</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Create Branch</strong></td>\\n<td><code>git branch dev</code> <br> <code>git checkout -b dev</code> <br> <code>git switch -c dev</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Switch Branch</strong></td>\\n<td><code>git checkout dev</code> <br> <code>git switch dev</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>View Local Branches</strong></td>\\n<td><code>git branch</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>View Remote Branches</strong></td>\\n<td><code>git branch -r</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Delete Local Branch</strong></td>\\n<td><code>git branch -d dev</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Delete Remote Branch</strong></td>\\n<td><code>git push origin --delete dev</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Stage Changes</strong></td>\\n<td><code>git add .</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Commit Changes</strong></td>\\n<td><code>git commit -m \\"feat: add new feature\\"</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Push Changes</strong></td>\\n<td><code>git push origin dev</code> <br> <code>git push -f origin dev</code> (force push)</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Pull Changes</strong></td>\\n<td><code>git pull origin dev</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Merge Changes</strong></td>\\n<td><code>git merge dev</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Check Status</strong></td>\\n<td><code>git status</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>View Commit History</strong></td>\\n<td><code>git log</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>View Differences</strong></td>\\n<td><code>git diff</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>View Remote URL</strong></td>\\n<td><code>git remote -v</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Rollback Version</strong></td>\\n<td>(Roll back to specific <code>commit_id</code>) <br> <code>git reset --hard commit_id</code> <br> (Roll back to previous version) <br> <code>git reset --soft HEAD^</code> or <code>git reset --soft HEAD~1</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Undo Changes</strong></td>\\n<td><code>git revert commit_id</code></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Merge (rebase)</strong></td>\\n<td><code>git rebase dev</code></td>\\n</tr>\\n</tbody>\\n</table>"}');export{m as comp,h as data};
